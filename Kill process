import psutil
import time
from datetime import datetime, timedelta

def check_and_kill_long_running_process(process_name, time_limit_minutes):
    """
    Checks for a process containing `process_name` in its command line.
    If running for more than `time_limit_minutes`, it terminates the process.
    """
    time_limit = timedelta(minutes=time_limit_minutes)
    now = datetime.now()

    for proc in psutil.process_iter(['pid', 'name', 'cmdline', 'create_time']):
        try:
            # Check if the process command line contains the target name
            cmdline = proc.info['cmdline']
            if cmdline and any(process_name in arg for arg in cmdline):
                # Calculate how long the process has been running
                create_time = datetime.fromtimestamp(proc.info['create_time'])
                runtime = now - create_time

                if runtime > time_limit:
                    print(f"Terminating process {proc.info['name']} (PID: {proc.info['pid']}) "
                          f"running for {runtime}.")
                    proc.terminate()
                    proc.wait()  # Wait for the process to terminate
        except (psutil.NoSuchProcess, psutil.AccessDenied, psutil.ZombieProcess):
            # Skip processes that no longer exist or cannot be accessed
            continue

if __name__ == "__main__":
    # Process name to search in command line
    process_name = "pull_data.py"
    # Time limit in minutes
    time_limit_minutes = 45

    check_and_kill_long_running_process(process_name, time_limit_minutes)
